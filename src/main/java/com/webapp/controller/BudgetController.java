package com.webapp.controller;import java.util.List;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.support.PagedListHolder;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.servlet.ModelAndView;import com.webapp.enity.Budget;import com.webapp.services.BudgetService;import com.webapp.utils.CustomDate;@Controllerpublic class BudgetController {	@Autowired	private BudgetService budgetService;	long totalIncome = 0;	long totalExpenses = 0;	long total = 0;	long IncomeYearly;	long ExpensesYearly;	long totalYearly;	@RequestMapping("/Budget-Table")	public ModelAndView listBudget(@RequestParam(required = false) Integer page, Model theModel) {		/*		 * 		 * CustomDate date=new CustomDate();		 * theModel.addAttribute("year",date.getThisYear());		 * 		 * totalYearly=calculateYearlyBudget(theBudget);		 * theModel.addAttribute("IncomeYearly",IncomeYearly);		 * theModel.addAttribute("ExpensesYearly",ExpensesYearly);		 * theModel.addAttribute("totalYearly",totalYearly);		 * 		 * return "budget/budget-table";		 */		ModelAndView modelAndView = new ModelAndView("budget/budget-table");		List<Budget> theBudget = budgetService.getAllBudget();		theModel.addAttribute("theBudget", theBudget);		CustomDate date = new CustomDate();		theModel.addAttribute("year", date.getThisYear());		totalYearly = calculateYearlyBudget(theBudget);		theModel.addAttribute("IncomeYearly", IncomeYearly);		theModel.addAttribute("ExpensesYearly", ExpensesYearly);		theModel.addAttribute("totalYearly", totalYearly);		PagedListHolder<Budget> pagedListHolder = new PagedListHolder<>(theBudget);		pagedListHolder.setPageSize(10);		modelAndView.addObject("maxPages", pagedListHolder.getPageCount());		if (page == null || page < 1 || page > pagedListHolder.getPageCount())			page = 1;		modelAndView.addObject("page", page);		if (page == null || page < 1 || page > pagedListHolder.getPageCount()) {			pagedListHolder.setPage(0);			modelAndView.addObject("budgets", pagedListHolder.getPageList());		} else if (page <= pagedListHolder.getPageCount()) {			pagedListHolder.setPage(page - 1);			modelAndView.addObject("budgets", pagedListHolder.getPageList());		}		return modelAndView;	}	@GetMapping("/Budget")	public String AddBudget(Model theModel) {		/// create model attribute to bind form data		CustomDate date = new CustomDate();		Budget theBudget = new Budget();		List<Budget> theIncomeList = budgetService.getIncomeThisMonth();		List<Budget> theExpensesList = budgetService.getExpencesThisMonth();		totalIncome = culculateTotals(theIncomeList);		totalExpenses = culculateTotals(theExpensesList);		total = totalIncome - totalExpenses;		theModel.addAttribute("totalIncome", totalIncome);		theModel.addAttribute("totalExpenses", totalExpenses);		theModel.addAttribute("total", total);		theModel.addAttribute("month", date.CurrentMonthName());		theModel.addAttribute("budget", theBudget);		theModel.addAttribute("theIncome", theIncomeList);		theModel.addAttribute("theExpenses", theExpensesList);		theModel.addAttribute("lastMonth", date.LastMonthName());		//// System.out.println("date.LastMonthName() "+date.LastMonthName());		long IncomeLastMonth = budgetService.totalIncomeLastMonth();		long ExpensesLastMonth = budgetService.totalExpencesLastMonth();		theModel.addAttribute("totalIncomeLastMonth", IncomeLastMonth);		theModel.addAttribute("totalExpensesLastMonth", ExpensesLastMonth);		budgetService.getExpencesThisMonth();		return "budget/budget";	}	@PostMapping("/Save-Budget")	public String saveBudget(@ModelAttribute("budget") Budget theBudget) {		budgetService.saveBudget(theBudget);		return "redirect:/Budget";	}	/// Update Customer Form	@GetMapping("/Update-Budget")	public String UpdateBudget(@RequestParam("budgetId") int theId, Model theModel) {		// get customer from services		Budget theBudget = budgetService.getBudget(theId);		// set customer as model attibute to form		theModel.addAttribute("budget", theBudget);		// send over to our form		return "redirect:/budget";	}	@GetMapping("/Delete-Budget")	public String deleteBudget(@RequestParam("budgetId") int theId, Model theModel) {		// delete customer from services		budgetService.deleteBudget(theId);		return "redirect:/Budget-Table";	}	public long culculateTotals(List<Budget> budgetData) {		int sum = 0;		for (Budget budget : budgetData) {			sum += budget.getValue();		}		return sum;	}	public long calculateYearlyBudget(List<Budget> budgetData) {		IncomeYearly = 0;		ExpensesYearly = 0;		totalYearly = 0;		for (Budget budget : budgetData) {			if (budget.getType().equals("Income")) {				IncomeYearly += budget.getValue();			} else {				ExpensesYearly += budget.getValue();			}		}		return IncomeYearly - ExpensesYearly;	}}